resource "aws_instance" "vpn_instance" {
  key_name = aws_key_pair.key_pair.key_name

  ami           = "ami-0a0c8eebcdd6dcbd0"
  instance_type = "t4g.nano"

  associate_public_ip_address = true
  subnet_id                   = aws_subnet.vpn_subnets.id
  vpc_security_group_ids      = [aws_security_group.vpn_security_group.id]
  private_ip                  = "10.0.50.50"

  source_dest_check = false

  root_block_device {
    delete_on_termination = true
    volume_type           = "gp3"
    volume_size           = 15
  }

  tags = {
    Name = "${local.name}-wireguard_vpn"
  }
}

resource "aws_subnet" "vpn_subnets" {
  vpc_id            = aws_vpc.vpc.id
  availability_zone = "us-east-1a"

  cidr_block = "10.0.50.0/24"

  tags = {
    Name = "${local.name}-vpn-subnet"
  }
}

resource "aws_security_group" "vpn_security_group" {
  name        = "${local.name}-wireguard_vpn-security_group"
  description = "The security group for wireguard_vpn generated by Terraform"

  vpc_id = aws_vpc.vpc.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 51820
    to_port     = 51820
    protocol    = "udp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["10.0.0.0/16"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "${local.name}-wireguard_vpn-security_group"
  }
}
